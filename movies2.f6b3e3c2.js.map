{"mappings":"YAIA,IAAMA,EAAW,gCACXC,EAAY,qBACZC,EAAU,mCAEVC,EAAOC,SAASC,cAAc,YAC9BC,EAASF,SAASC,cAAc,aAClCE,EAAc,IAQdC,EAAW,IAAIC,sBAEnB,SAAuBC,EAASC,GAC9BD,EAAQE,SAAQ,SAAAC,GACVA,EAAMC,gBAERC,EADAR,GAAe,GAEZS,MAAK,SAAAC,GACJd,EAAKe,mBAAmB,YAAaC,EAAaF,EAAKG,UACrC,MAAdH,EAAKI,MACPV,EAASW,UAAUhB,E,IAGtBiB,OAAM,SAAAC,G,OAAOC,QAAQC,IAAIF,E,SAnBpB,CACZG,KAAM,KACNC,WAAY,QACZC,UAAW,IAqBb,SAASV,EAAaW,GACpB,OAAOA,EACJC,KACC,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,M,MACd,0DACgEC,OAArBF,EAAY,WAC7CE,OADsDD,EAAM,wBACtDC,OAAND,EAAM,uB,IAGnBE,KAAK,G,CAGV,SAASrB,I,IAAYM,EAAAgB,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EAC1B,OAAOE,MAAM,GAAcJ,OAAXnC,GAAgCmC,OAArBlC,EAAU,aAA2BkC,OAAhBjC,EAAQ,UAAaiC,OAALd,IAAQL,MACtE,SAAAwB,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAG3B,OAAOH,EAASI,M,IAMtB7B,IACGC,MAAK,SAAAC,GACJd,EAAKe,mBAAmB,YAAaC,EAAaF,EAAKG,UACvDZ,EAASqC,QAAQvC,E,IAElBiB,OAAM,SAAAC,G,OAAOC,QAAQC,IAAIF,E","sources":["src/js/movies2.js"],"sourcesContent":["// https://api.themoviedb.org/3/trending/movie/\n// https://image.tmdb.org/t/p/w500/1E5baAaEse26fej7uHcjOgEE2t2.jpg\nimport '../css/common.css';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst END_POINT = 'trending/movie/day';\nconst API_KEY = '14d9418a13ba1f50c8b95263b7df6dda';\n// ---------\nconst list = document.querySelector('.js-list');\nconst target = document.querySelector('.js-guard');\nlet currentPage = 498;\n\nlet options = {\n  root: null,\n  rootMargin: '300px',\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(onInfinitLoad, options);\n\nfunction onInfinitLoad(entries, observer) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      getTrending(currentPage)\n        .then(data => {\n          list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n          if (data.page === 500) {\n            observer.unobserve(target);\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  });\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ poster_path, title }) =>\n        `<li>\n        <img src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${title}\">\n            <h2>${title}</h2>\n        </li>`\n    )\n    .join('');\n}\n\nfunction getTrending(page = 1) {\n  return fetch(`${BASE_URL}${END_POINT}?api_key=${API_KEY}&page=${page}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response.json();\n    }\n  );\n}\n\n// якщо параметр не вказаний, то тут дефолтне значення page=1\ngetTrending()\n  .then(data => {\n    list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n    observer.observe(target);\n  })\n  .catch(err => console.log(err));\n"],"names":["$4203499af01c4339$var$BASE_URL","$4203499af01c4339$var$END_POINT","$4203499af01c4339$var$API_KEY","$4203499af01c4339$var$list","document","querySelector","$4203499af01c4339$var$target","$4203499af01c4339$var$currentPage","$4203499af01c4339$var$observer","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","$4203499af01c4339$var$getTrending","then","data","insertAdjacentHTML","$4203499af01c4339$var$createMarkup","results","page","unobserve","catch","err","console","log","root","rootMargin","threshold","arr","map","param","poster_path","title","concat","join","arguments","length","fetch","response","ok","Error","statusText","json","observe"],"version":3,"file":"movies2.f6b3e3c2.js.map"}